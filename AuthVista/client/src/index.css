@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&family=Quicksand:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 140 15% 12%;

  --border: 0 0% 88%;

  --card: 0 0% 96%;

  --card-foreground: 140 15% 10%;

  --card-border: 0 0% 91%;

  --sidebar: 140 4% 94%;

  --sidebar-foreground: 140 15% 10%;

  --sidebar-border: 140 4% 87%;

  --sidebar-primary: 140 65% 42%;

  --sidebar-primary-foreground: 140 15% 98%;

  --sidebar-accent: 140 8% 88%;

  --sidebar-accent-foreground: 140 15% 15%;

  --sidebar-ring: 140 65% 42%;

  --popover: 0 0% 92%;

  --popover-foreground: 140 10% 10%;

  --popover-border: 0 0% 85%;

  --primary: 140 65% 42%;

  --primary-foreground: 140 15% 98%;

  --secondary: 140 6% 86%;

  --secondary-foreground: 140 15% 15%;

  --muted: 140 8% 90%;

  --muted-foreground: 140 10% 35%;

  --accent: 140 12% 88%;

  --accent-foreground: 140 15% 18%;

  --orange: 25 85% 48%;

  --orange-foreground: 25 15% 98%;

  --destructive: 0 70% 45%;

  --destructive-foreground: 0 15% 98%;

  --input: 0 0% 72%;
  --ring: 140 65% 42%;
  --chart-1: 140 65% 35%;
  --chart-2: 25 85% 48%;
  --chart-3: 200 70% 45%;
  --chart-4: 40 90% 50%;
  --chart-5: 280 60% 45%;

  --font-sans: Poppins, system-ui, -apple-system, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: 'JetBrains Mono', Menlo, monospace;
  --radius: .75rem;
  --shadow-2xs: 0px 1px 2px 0px hsl(140 15% 12% / 0.05);
  --shadow-xs: 0px 1px 3px 0px hsl(140 15% 12% / 0.08);
  --shadow-sm: 0px 2px 4px -1px hsl(140 15% 12% / 0.06), 0px 1px 2px -1px hsl(140 15% 12% / 0.08);
  --shadow: 0px 4px 6px -1px hsl(140 15% 12% / 0.08), 0px 2px 4px -2px hsl(140 15% 12% / 0.10);
  --shadow-md: 0px 6px 12px -2px hsl(140 15% 12% / 0.10), 0px 3px 6px -3px hsl(140 15% 12% / 0.12);
  --shadow-lg: 0px 10px 20px -4px hsl(140 15% 12% / 0.12), 0px 5px 10px -5px hsl(140 15% 12% / 0.14);
  --shadow-xl: 0px 20px 30px -6px hsl(140 15% 12% / 0.14), 0px 8px 15px -7px hsl(140 15% 12% / 0.16);
  --shadow-2xl: 0px 25px 50px -12px hsl(140 15% 12% / 0.20);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 140 5% 8%;

  --foreground: 140 5% 95%;

  --border: 140 5% 20%;

  --card: 140 6% 11%;

  --card-foreground: 140 5% 95%;

  --card-border: 140 6% 16%;

  --sidebar: 140 8% 13%;

  --sidebar-foreground: 140 5% 92%;

  --sidebar-border: 140 8% 19%;

  --sidebar-primary: 140 65% 45%;

  --sidebar-primary-foreground: 140 15% 98%;

  --sidebar-accent: 140 12% 18%;

  --sidebar-accent-foreground: 140 5% 90%;

  --sidebar-ring: 140 65% 45%;

  --popover: 140 8% 15%;

  --popover-foreground: 140 5% 94%;

  --popover-border: 140 8% 21%;

  --primary: 140 65% 45%;

  --primary-foreground: 140 15% 98%;

  --secondary: 140 10% 20%;

  --secondary-foreground: 140 5% 92%;

  --muted: 140 10% 17%;

  --muted-foreground: 140 8% 70%;

  --accent: 140 15% 19%;

  --accent-foreground: 140 5% 90%;

  --orange: 25 85% 55%;

  --orange-foreground: 25 15% 98%;

  --destructive: 0 70% 48%;

  --destructive-foreground: 0 15% 98%;

  --input: 140 8% 35%;
  --ring: 140 65% 45%;
  --chart-1: 140 65% 65%;
  --chart-2: 25 85% 65%;
  --chart-3: 200 70% 65%;
  --chart-4: 40 90% 65%;
  --chart-5: 280 60% 65%;

  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.30);
  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.35);
  --shadow-sm: 0px 2px 4px -1px hsl(0 0% 0% / 0.40), 0px 1px 2px -1px hsl(0 0% 0% / 0.35);
  --shadow: 0px 4px 6px -1px hsl(0 0% 0% / 0.45), 0px 2px 4px -2px hsl(0 0% 0% / 0.40);
  --shadow-md: 0px 6px 12px -2px hsl(0 0% 0% / 0.50), 0px 3px 6px -3px hsl(0 0% 0% / 0.45);
  --shadow-lg: 0px 10px 20px -4px hsl(0 0% 0% / 0.55), 0px 5px 10px -5px hsl(0 0% 0% / 0.50);
  --shadow-xl: 0px 20px 30px -6px hsl(0 0% 0% / 0.60), 0px 8px 15px -7px hsl(0 0% 0% / 0.55);
  --shadow-2xl: 0px 25px 50px -12px hsl(0 0% 0% / 0.70);

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}

/* ==================== FOREST THEME ANIMATIONS ==================== */

/* Forest Background Animation */
@keyframes forestBreeze {
  0%, 100% { transform: translateX(0) translateY(0); }
  25% { transform: translateX(10px) translateY(-5px); }
  50% { transform: translateX(0) translateY(0); }
  75% { transform: translateX(-10px) translateY(5px); }
}

@keyframes dewDrop {
  0% { 
    transform: translateY(-10px) scale(0);
    opacity: 0;
  }
  10% {
    transform: translateY(0) scale(1);
    opacity: 1;
  }
  90% {
    transform: translateY(100vh) scale(0.8);
    opacity: 0.6;
  }
  100% {
    transform: translateY(100vh) scale(0);
    opacity: 0;
  }
}

@keyframes leafFloat {
  0% {
    transform: translateY(-10px) translateX(0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 0.8;
  }
  90% {
    opacity: 0.3;
  }
  100% {
    transform: translateY(100vh) translateX(50px) rotate(360deg);
    opacity: 0;
  }
}

@keyframes shimmer {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.8; }
}

@keyframes glowPulse {
  0%, 100% { 
    box-shadow: 0 0 10px hsl(140 65% 45% / 0.3),
                0 0 20px hsl(140 65% 45% / 0.2);
  }
  50% { 
    box-shadow: 0 0 20px hsl(140 65% 45% / 0.5),
                0 0 40px hsl(140 65% 45% / 0.3);
  }
}

@keyframes mistFlow {
  0% { transform: translateX(-100%); opacity: 0.1; }
  50% { opacity: 0.3; }
  100% { transform: translateX(100%); opacity: 0.1; }
}

@keyframes sunRayRotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Glassmorphism Utilities */
@layer components {
  .glass-card {
    @apply backdrop-blur-xl bg-white/10 border border-white/20 rounded-2xl shadow-2xl;
  }
  
  .glass-card-strong {
    @apply backdrop-blur-2xl bg-white/15 border border-white/30 rounded-2xl shadow-2xl;
  }
  
  .glass-input {
    @apply backdrop-blur-lg bg-white/5 border-2 border-white/20 rounded-xl
           focus:border-primary focus:ring-2 focus:ring-primary/50
           transition-all duration-300 text-foreground placeholder:text-muted-foreground;
  }
  
  .glass-button {
    @apply backdrop-blur-lg bg-gradient-to-r from-primary/80 to-primary/60
           hover:from-primary hover:to-primary/80
           border border-white/20 rounded-xl font-medium
           transition-all duration-300 shadow-lg hover:shadow-xl
           hover:scale-105 active:scale-95 text-primary-foreground;
  }
  
  .forest-glow {
    @apply shadow-[0_0_20px_hsl(140_65%_45%/0.3)];
    animation: glowPulse 3s ease-in-out infinite;
  }
  
  .dew-drop {
    position: absolute;
    width: 8px;
    height: 8px;
    background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.3));
    border-radius: 50%;
    animation: dewDrop 8s linear infinite;
    pointer-events: none;
    z-index: 10;
  }
  
  .floating-leaf {
    position: absolute;
    width: 20px;
    height: 20px;
    background: linear-gradient(135deg, hsl(140 65% 45%), hsl(140 50% 25%));
    clip-path: polygon(50% 0%, 0% 100%, 100% 100%);
    animation: leafFloat 15s linear infinite;
    pointer-events: none;
    opacity: 0;
    z-index: 10;
  }
  
  .mist-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 200%;
    height: 100%;
    background: linear-gradient(90deg, 
      transparent 0%,
      rgba(255, 255, 255, 0.05) 50%,
      transparent 100%
    );
    animation: mistFlow 20s linear infinite;
    pointer-events: none;
    z-index: 5;
  }
  
  .forest-background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: 
      linear-gradient(135deg, hsl(140 25% 15% / 0.95), hsl(140 35% 10% / 0.98)),
      radial-gradient(ellipse at top, hsl(140 40% 20% / 0.4), transparent 50%),
      radial-gradient(ellipse at bottom right, hsl(45 60% 30% / 0.2), transparent 50%);
    background-size: cover;
    background-position: center;
    z-index: -1;
  }
  
  .forest-background::before {
    content: '';
    position: absolute;
    inset: 0;
    background-image: 
      repeating-linear-gradient(
        45deg,
        transparent,
        transparent 100px,
        hsl(140 50% 25% / 0.05) 100px,
        hsl(140 50% 25% / 0.05) 200px
      );
    animation: forestBreeze 10s ease-in-out infinite;
  }
}